{"ast":null,"code":"import _objectSpread from\"/home/tanmay/Documents/mapping/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useEffect,useState}from\"react\";import{MapContainer,TileLayer,GeoJSON,Tooltip}from\"react-leaflet\";import\"leaflet/dist/leaflet.css\";import geoData from\"../data/jharkhand.geojson.js\";import rainfallData from\"../data/rainfall.js\";import vegetationData from\"../data/vegetation.js\";import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const JharkhandRainfallMap=()=>{const[features,setFeatures]=useState([]);const[dataType,setDataType]=useState(\"rainfall\");useEffect(()=>{// Merge rainfall data with GeoJSON\nconst mergedFeatures=geoData.features.map(feature=>{const district=(feature.properties.Dist_Name||\"\").toLowerCase().trim();let matchedData;if(dataType===\"rainfall\"){matchedData=rainfallData.find(d=>d.Dist_Name===district);feature.properties.value=matchedData?matchedData.rainfall:0;}else{matchedData=vegetationData.find(d=>d.Dist_Name===district);feature.properties.value=matchedData?matchedData.vegetation:0;console.log(feature.properties.value);}return feature;});setFeatures(mergedFeatures);},[dataType]);// Color based on rainfall\nconst getRainfallColor=d=>{return d>1100?\"#08306b\":d>1000?\"#2171b5\":d>900?\"#6baed6\":d>800?\"#c6dbef\":\"#eff3ff\";};const getVegetationColor=v=>{return v>70?\"#00441b\":// Dense Forest\nv>65?\"#1b7837\":// Moderate-Dense\nv>55?\"#5aae61\":// Moderate\nv>45?\"#a6dba0\":// Light\n\"#d9f0d3\";// Sparse\n};const style=feature=>{const value=feature.properties.value||0;return{fillColor:dataType===\"rainfall\"?getRainfallColor(value):getVegetationColor(value),weight:1,opacity:1,color:\"black\",fillOpacity:0.7};};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:\"10px\",textAlign:\"center\"},children:/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setDataType(dataType===\"rainfall\"?\"vegetation\":\"rainfall\"),style:{padding:\"8px 16px\",backgroundColor:\"#1976d2\",color:\"#fff\",border:\"none\",borderRadius:\"4px\",cursor:\"pointer\"},children:[\"Show \",dataType===\"rainfall\"?\"Vegetation\":\"Rainfall\"]})}),/*#__PURE__*/_jsxs(MapContainer,{center:[23.6102,85.2799],zoom:7,style:{height:\"800px\",width:\"100%\"},children:[/*#__PURE__*/_jsx(TileLayer,{attribution:\"\\xA9 OpenStreetMap contributors\",url:\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"}),/*#__PURE__*/_jsx(GeoJSON,{data:_objectSpread(_objectSpread({},geoData),{},{features}),style:style,onEachFeature:(feature,layer)=>{const name=feature.properties.Dist_Name||\"Unknown\";const value=feature.properties.value||\"N/A\";const tooltipLabel=dataType===\"rainfall\"?\"\".concat(name,\": \").concat(value,\" mm Rainfall\"):\"\".concat(name,\": \").concat(value,\"% Vegetation\");layer.bindTooltip(tooltipLabel,{sticky:true});}})]})]});};export default JharkhandRainfallMap;","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","GeoJSON","Tooltip","geoData","rainfallData","vegetationData","jsxs","_jsxs","jsx","_jsx","JharkhandRainfallMap","features","setFeatures","dataType","setDataType","mergedFeatures","map","feature","district","properties","Dist_Name","toLowerCase","trim","matchedData","find","d","value","rainfall","vegetation","console","log","getRainfallColor","getVegetationColor","v","style","fillColor","weight","opacity","color","fillOpacity","children","marginBottom","textAlign","onClick","padding","backgroundColor","border","borderRadius","cursor","center","zoom","height","width","attribution","url","data","_objectSpread","onEachFeature","layer","name","tooltipLabel","concat","bindTooltip","sticky"],"sources":["/home/tanmay/Documents/mapping/src/components/MapPlotting.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { MapContainer, TileLayer, GeoJSON, Tooltip } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport geoData from \"../data/jharkhand.geojson.js\";\nimport rainfallData from \"../data/rainfall.js\";\nimport vegetationData from \"../data/vegetation.js\";\n\nconst JharkhandRainfallMap = () => {\n  const [features, setFeatures] = useState([]);\n  const [dataType, setDataType] = useState(\"rainfall\"); \n\n  useEffect(() => {\n    // Merge rainfall data with GeoJSON\n    const mergedFeatures = geoData.features.map((feature) => {\n    const district = (feature.properties.Dist_Name || \"\").toLowerCase().trim();\n\n    let matchedData;\n    if (dataType === \"rainfall\") {\n      matchedData = rainfallData.find(d => d.Dist_Name === district);\n      feature.properties.value = matchedData ? matchedData.rainfall : 0;\n    } else {\n      matchedData = vegetationData.find(d => d.Dist_Name === district);\n      feature.properties.value = matchedData ? matchedData.vegetation : 0;\n      console.log(feature.properties.value)\n    }\n\n    return feature;\n  });\n\n  setFeatures(mergedFeatures);\n}, [dataType]); \n\n  // Color based on rainfall\nconst getRainfallColor = (d) => {\n  return d > 1100 ? \"#08306b\" :\n         d > 1000 ? \"#2171b5\" :\n         d > 900  ? \"#6baed6\" :\n         d > 800  ? \"#c6dbef\" :\n                    \"#eff3ff\";\n};\n\nconst getVegetationColor = (v) => {\n  return v > 70 ? \"#00441b\" :     // Dense Forest\n         v > 65 ? \"#1b7837\" :     // Moderate-Dense\n         v > 55 ? \"#5aae61\" :     // Moderate\n         v > 45 ? \"#a6dba0\" :     // Light\n                  \"#d9f0d3\";      // Sparse\n};\n\nconst style = (feature) => {\n  const value = feature.properties.value || 0;\n\n  return {\n    fillColor: dataType === \"rainfall\" ? getRainfallColor(value) : getVegetationColor(value),\n    weight: 1,\n    opacity: 1,\n    color: \"black\",\n    fillOpacity: 0.7,\n  };\n};\n\n  return (\n    <div>\n    {/* Toggle Button Above Map */}\n    <div style={{ marginBottom: \"10px\", textAlign: \"center\" }}>\n      <button\n        onClick={() =>\n          setDataType(dataType === \"rainfall\" ? \"vegetation\" : \"rainfall\")\n        }\n        style={{\n          padding: \"8px 16px\",\n          backgroundColor: \"#1976d2\",\n          color: \"#fff\",\n          border: \"none\",\n          borderRadius: \"4px\",\n          cursor: \"pointer\",\n        }}\n      >\n        Show {dataType === \"rainfall\" ? \"Vegetation\" : \"Rainfall\"}\n      </button>\n    </div>\n   <MapContainer center={[23.6102, 85.2799]} zoom={7} style={{ height: \"800px\", width: \"100%\" }}>\n  <TileLayer\n    attribution='&copy; OpenStreetMap contributors'\n    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n  />\n  <GeoJSON\n    data={{ ...geoData, features }}\n    style={style}\n    onEachFeature={(feature, layer) => {\n      const name = feature.properties.Dist_Name || \"Unknown\";\n      const value = feature.properties.value || \"N/A\";\n\n      const tooltipLabel =\n        dataType === \"rainfall\"\n          ? `${name}: ${value} mm Rainfall`\n          : `${name}: ${value}% Vegetation`;\n\n      layer.bindTooltip(tooltipLabel, {\n        sticky: true,\n      });\n    }}\n  />\n</MapContainer>\n\n    </div>\n  );\n};\n\nexport default JharkhandRainfallMap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}